{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","App.js","index.js"],"names":["Titles","react_default","a","createElement","className","Form","props","onSubmit","getWeather","type","step","name","placeholder","Weather","longitude","lattitude","temperature","humidity","description","wind","error","App","state","undefined","_callee","e","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","method","sent","json","_this","setState","coord","lon","lat","main","temp","weather","speed","stop","this","components_Titles","components_Form","components_Weather","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.197f2975.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Titles = () => (\n  <div>\n    <h1 className=\"title-container__title\">Weather Finder</h1>\n    <h3 className=\"title-container__subtitle\">\n      Find out temperature, conditions and more...\n    </h3>\n  </div>\n);\n\nexport default Titles;\n","import React from \"react\";\n\nconst Form = (props) => (\n  <div>\n    <form onSubmit={props.getWeather}>\n      <input\n        type=\"number\"\n        step=\"any\"\n        name=\"longitude\"\n        placeholder=\"Longitude\"\n      />\n      <input\n        type=\"number\"\n        step=\"any\"\n        name=\"lattitude\"\n        placeholder=\"Lattitude\"\n      />\n      <button>Get Weather</button>\n    </form>\n  </div>\n);\n\nexport default Form;\n","import React from 'react';\n\nconst Weather = props => (\n<div className=\"weather__info\">\n\t{ props.longitude && props.lattitude && <p className=\"weather__key\">Location : <span className=\"weather__value\">{props.longitude}, {props.lattitude}</span></p> }\n\n\t{ props.temperature && <p className=\"weather__key\">Temperature : <span className=\"weather__value\">{props.temperature}</span></p> }\n\n\t{ props.humidity && <p className=\"weather__key\">Humidity : <span className=\"weather__value\">{props.humidity}</span></p> }\n\n\t{ props.description && <p className=\"weather__key\">Description : <span className=\"weather__value\">{props.description}</span></p> }\n\n\t{ props.wind && <p className=\"weather__key\">Wind : <span className=\"weather__value\">{props.wind}</span></p> }\n\n\t{ props.error && <p className=\"weather__error\">Error : {props.error}</p> }\n</div>\n);\n\nexport default Weather;\n","import React, { Component } from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\n/* const API_KEY = 'https://fcc-weather-api.glitch.me/api/current?lat=35&lon=139'; */\n\nclass App extends Component {\n  // New state method introduced in React 16\n  // Good practice: Initial State is undefined because we do not know the API Data type (i.e number, string, boolean,etc) from the server data\n\n  state = {\n    longitude: undefined,\n    lattitude: undefined,\n    temperature: undefined,\n    humidity: undefined,\n    description: undefined,\n    wind: undefined,\n    error: undefined,\n  };\n\n  //async -- promised based response\n  getWeather = async (e) => {\n    e.preventDefault();\n    //to prevent browser's default behavior\n\n    const longitude = e.target.elements.longitude.value;\n    const lattitude = e.target.lattitude.value;\n\n    //fetching data from the server using API call, await used to wait until data fetched from the server\n    const api_call = await fetch(\n      `https://fcc-weather-api.glitch.me/api/current?lon=${longitude}&lat=${lattitude}`,\n      { method: \"GET\" }\n    );\n    const data = await api_call.json();\n\n    if (longitude && lattitude) {\n      this.setState({\n        longitude: data.coord.lon,\n        lattitude: data.coord.lat,\n        temperature: data.main.temp,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        wind: data.wind.speed,\n        error: \"\",\n      });\n    } else {\n      this.setState({\n        longitude: undefined,\n        lattitude: undefined,\n        temperature: undefined,\n        humidity: undefined,\n        description: undefined,\n        wind: undefined,\n        error: \"Please Enter both values\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container shadow \">\n              <div className=\"row\">\n                <div className=\"col-sm-5 title-container\">\n                  <Titles />\n                </div>\n                <div className=\"col-sm-7 form-container\">\n                  <Form getWeather={this.getWeather} />\n                  <Weather\n                    longitude={this.state.longitude}\n                    lattitude={this.state.lattitude}\n                    temperature={this.state.temperature}\n                    humidity={this.state.humidity}\n                    description={this.state.description}\n                    wind={this.state.wind}\n                    error={this.state.error}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}